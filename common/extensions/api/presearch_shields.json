// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

[
  {
    "namespace": "presearchShields",
    "description": "Use the <code>chrome.presearchShields</code> API to receive notifications about the status of presearch shields.",
    "compiler_options": {
      "implemented_in": "presearch/browser/extensions/api/presearch_shields_api.h"
    },
    "events": [
      {
        "name": "onBlocked",
        "type": "function",
        "description": "Fired when an ad or tracker is blocked.",
        "parameters": [
          {
            "type": "object",
            "name": "details",
            "properties": {
              "tabId": {"type": "integer", "description": "The ID of the tab in which the action occurs."},
              "blockType": {"type": "string", "description": "\"adBlock\" or \"trackingProtection\"."},
              "subresource": {"type": "string", "description": "The URL of the subresource in question."}
            }
          }
        ]
      }
    ],
    "functions": [
      {
        "name": "openBrowserActionUI",
        "type": "function",
        "description": "Prompts the user with a popup UI",
        "parameters": [
          {
            "name": "windowID",
            "type": "integer",
            "minimum": 0,
            "optional": true
          },
          {
            "name": "relativePath",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "setPresearchShieldsEnabled",
        "type": "function",
        "description": "Set presearch shields control type for a url",
        "parameters": [
          {
            "name": "enabled",
            "type": "boolean"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "onShieldsPanelShown",
        "type": "function",
        "description": "Notifies the browser about the fact of showing the panel",
        "parameters": []
      },
      {
        "name": "urlCosmeticResources",
        "type": "function",
        "description": "Get a cosmetic adblocking stylesheet, generic style exceptions, script injections, and whether or not a generichide rule was present, all specific for the given URL",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "urlSpecificResources",
                "type": "object",
                "properties": {
                  "hide_selectors": {"type": "array", "items": {"type": "string"}, "description": "URL-specific CSS selectors that should be hidden from the page if they are determined to not include 1st party content"},
                  "style_selectors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "description": "URL-specific CSS selectors that should be restyled, with their associated CSS style rules"},
                  "exceptions": {"type": "array", "items": {"type": "string"}, "description": "URL-specific overrides for generic cosmetic blocking selectors"},
                  "injected_script": {"type": "string", "description": "A script to inject as the page is loading"},
                  "force_hide_selectors": {"type": "array", "items": {"type": "string"}, "description": "URL-specific CSS selectors that should be hidden from the page"},
                  "generichide": {"type": "boolean", "description": "Indicates whether or not the URL matched a generichide exception rule"}
                }
              }
            ]
          }
        ]
      },
      {
        "name": "hiddenClassIdSelectors",
        "type": "function",
        "description": "Get a stylesheet of generic rules that may apply to the given set of classes and ids without any of the given excepted selectors",
        "parameters": [
          {
            "name": "classes",
            "type": "array",
            "items": {"type": "string"}
          },
          {
            "name": "ids",
            "type": "array",
            "items": {"type": "string"}
          },
          {
            "name": "exceptions",
            "type": "array",
            "items": {"type": "string"}
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "selectors",
                "type": "array",
                "items": {"type": "string"}
              },
              {
                "name": "forceHideSelectors",
                "type": "array",
                "items": {"type": "string"}
              }
            ]
          }
        ]
      },
      {
        "name": "migrateLegacyCosmeticFilters",
        "type": "function",
        "description": "Appends the provided legacy cosmetic filters to the custom filters of presearch://adblock",
        "parameters": [
          {
            "name": "legacyFilters",
            "type": "object",
            "description": "Mapping from hostnames with stored legacy cosmetic filter rules to the corresponding lists of rules",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "description": "Returns true if the filters were successfully stored, signifying that the old filters should be removed",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "addSiteCosmeticFilter",
        "type": "function",
        "description": "Saves an element to hide on a page by creating a new filter of the form `host##cssSelector` in the custom filters of presearch://adblock",
        "parameters": [
          {
            "name": "host",
            "type": "string",
            "description": "The hostname on which to apply the new filter"
          },
          {
            "name": "cssSelector",
            "type": "string",
            "description": "The CSS selector that should be hidden"
          }
        ]
      },
      {
        "name": "openFilterManagementPage",
        "type": "function",
        "description": "Opens presearch://adblock for the purpose of adding, editing, or removing custom filters",
        "parameters": []
      },
      {
        "name": "getPresearchShieldsEnabled",
        "type": "function",
        "description": "Get presearch shields control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "enabled",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "shouldDoCosmeticFiltering",
        "type": "function",
        "description": "Determine whether or not to do cosmetic filtering on the given url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "doCosmeticFiltering",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setCosmeticFilteringControlType",
        "type": "function",
        "description": "Set cosmetic filtering control type for a url",
        "parameters": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "isFirstPartyCosmeticFilteringEnabled",
        "type": "function",
        "description": "Check if first-party cosmetic filtering is enabled for the given url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "hide1pContent",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setAdControlType",
        "type": "function",
        "description": "Set ads control type for a url",
        "parameters": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "getAdControlType",
        "type": "function",
        "description": "Get ads control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "controlType",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setCookieControlType",
        "type": "function",
        "description": "Set cookie control type for a url",
        "parameters": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "getCookieControlType",
        "type": "function",
        "description": "Get cookie control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "controlType",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setFingerprintingControlType",
        "type": "function",
        "description": "Set fingerprinting control type for a url",
        "parameters": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "getFingerprintingControlType",
        "type": "function",
        "description": "Get fingerprinting control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "controlType",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setHTTPSEverywhereEnabled",
        "type": "function",
        "description": "Set httpse control type for a url",
        "parameters": [
          {
            "name": "enabled",
            "type": "boolean"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "getHTTPSEverywhereEnabled",
        "type": "function",
        "description": "Get httpse control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "enabled",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setNoScriptControlType",
        "type": "function",
        "description": "Set noscript control type for a url",
        "parameters": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "getNoScriptControlType",
        "type": "function",
        "description": "Get noscript control type for a url",
        "parameters": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "controlType",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "allowScriptsOnce",
        "type": "function",
        "description": "Allow scripts from a list of origins until next reload",
        "parameters": [
          {
            "name": "origins",
            "type": "array",
            "items": {"type": "string"}
          },
          {
            "name": "tabID",
            "type": "integer"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "reportBrokenSite",
        "type": "function",
        "description": "Bring up a modal for reporting a site broken by Shields to the Presearch developers",
        "parameters": [
          {
            "name": "tabId",
            "type": "integer"
          }
        ]
      }
    ]
  }
]
